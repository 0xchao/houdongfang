@model LoginModel
@using Nop.Web.Models.Customer;
@using Nop.Core;
@using Nop.Core.Infrastructure;
@{
    Layout = "~/Themes/houdongfang/Views/Shared/_Root.cshtml";

    //title
    Html.AddTitleParts(T("PageTitle.Login").Text);

    //register URL with return URL (if specified)
    var registerUrl = Url.RouteUrl("Register");
    if (!String.IsNullOrEmpty(this.Context.Request.QueryString["returnUrl"]))
    {
        var webHelper = EngineContext.Current.Resolve<IWebHelper>();
        registerUrl = webHelper.ModifyQueryString(registerUrl, "returnurl=" + HttpUtility.UrlEncode(this.Context.Request.QueryString["returnUrl"]), null);
    }
}
<div class="sigin">
    <div class="sigin_ban"></div>
    <div class="entry">
        <div class="entry_logo"><img src="~/Themes/houdongfang/Content/Images/footer_logo@2x.png" /></div>
        <div class="entry_1 clear">
            <div class="entry_1T">登录</div>
            <div class="entry_1B"><a href="@registerUrl">@T("Account.Register")</a></div>
            <div class="entry_line"></div>
        </div>
        <div class="entry_2">
            @using (Html.BeginForm())
            {
                if (Model.UsernamesEnabled)
                {
                    <div class="entry_email">
                        <div class="entry_email_pic"><i class="iconfont">&#xe619;</i></div>
                        @Html.TextBoxFor(m => m.Username, new { @class = "username", autofocus = "autofocus" })
                        @Html.ValidationMessageFor(m => m.Username)
                    </div>
                }
                else
                {
                    <div class="entry_email">
                        <div class="entry_email_pic"><i class="iconfont">&#xe619;</i></div>
                        @Html.TextBoxFor(m => m.Email, new { @class = "email", autofocus = "autofocus" })
                        @Html.ValidationMessageFor(m => m.Email)
                    </div>
                }
                <div class="entry_word">
                    <div class="entry_email_pic"><i class="iconfont">&#xe61a;</i></div>
                    @Html.PasswordFor(m => m.Password, new { @class = "password" })
                    @Html.ValidationMessageFor(m => m.Password)
                </div>
                <div class="inputs reversed">
                    @Html.CheckBoxFor(m => m.RememberMe)
                    @Html.LabelFor(m => m.RememberMe)
                </div>
                if (Model.DisplayCaptcha)
                {
                    <div class="captcha-box">
                        @Html.Raw(Html.GenerateCaptcha())
                    </div>
                }
                <div class="entry_hint">
                    <p>@Html.ValidationSummary(true, T("Account.Login.Unsuccessful").Text)</p>
                    @Html.RouteLink(T("Account.Login.ForgotPassword").Text, "PasswordRecovery")
               </div>
                <div class="entry_word"></div>
                <div class="entry_btn">
                    <input type="submit" value="@T("Account.Login.LoginButton")" />
                </div>
            }
            <div class="entry_ready">点击注册登录按钮，表示您已同意<a href="">用户使用条款</a></div>
        </div>
    </div>
</div>