@model MyProductModel
@using Nop.Web.Models.Customer;
<script type="text/template" id="qq-template-validation">
    <div class="qq-uploader-selector qq-uploader qq-gallery" qq-drop-area-text="Drop files here">
        <div class="qq-total-progress-bar-container-selector qq-total-progress-bar-container">
            <div role="progressbar" aria-valuenow="0" aria-valuemin="0" aria-valuemax="100" class="qq-total-progress-bar-selector qq-progress-bar qq-total-progress-bar"></div>
        </div>
        <div class="qq-upload-drop-area-selector qq-upload-drop-area" qq-hide-dropzone>
            <span class="qq-upload-drop-area-text-selector"></span>
        </div>
        <div class="qq-upload-button-selector qq-upload-button">
            <div>上传图片</div>
        </div>
        <span class="qq-drop-processing-selector qq-drop-processing">
            <span>Processing dropped files...</span>
            <span class="qq-drop-processing-spinner-selector qq-drop-processing-spinner"></span>
        </span>
        <ul class="qq-upload-list-selector qq-upload-list" role="region" aria-live="polite" aria-relevant="additions removals">
            <li>
                <span role="status" class="qq-upload-status-text-selector qq-upload-status-text"></span>
                <div class="qq-progress-bar-container-selector qq-progress-bar-container">
                    <div role="progressbar" aria-valuenow="0" aria-valuemin="0" aria-valuemax="100" class="qq-progress-bar-selector qq-progress-bar"></div>
                </div>
                <span class="qq-upload-spinner-selector qq-upload-spinner"></span>
                <div class="qq-thumbnail-wrapper">
                    <a class="preview-link" target="_blank">
                        <img class="qq-thumbnail-selector" qq-max-size="120" qq-server-scale>
                    </a>
                </div>
                <button class="qq-upload-cancel-selector qq-upload-cancel">X</button>
                <button class="qq-upload-retry-selector qq-upload-retry">
                    <span class="qq-btn qq-retry-icon" aria-label="Retry"></span>
                    Retry
                </button>

                <div class="qq-file-info">
                    <div class="qq-file-name">
                        <span class="qq-upload-file-selector qq-upload-file"></span>
                        <span class="qq-edit-filename-icon-selector qq-edit-filename-icon" aria-label="Edit filename"></span>
                    </div>
                    <input class="qq-edit-filename-selector qq-edit-filename" tabindex="0" type="text">
                    <span class="qq-upload-size-selector qq-upload-size"></span>
                    <button class="qq-btn qq-upload-delete-selector qq-upload-delete">
                        <span class="qq-btn qq-delete-icon" aria-label="Delete">X</span>
                    </button>
                    <button class="qq-btn qq-upload-pause-selector qq-upload-pause">
                        <span class="qq-btn qq-pause-icon" aria-label="Pause"></span>
                    </button>
                    <button class="qq-btn qq-upload-continue-selector qq-upload-continue">
                        <span class="qq-btn qq-continue-icon" aria-label="Continue"></span>
                    </button>
                </div>
            </li>
        </ul>

        <dialog class="qq-alert-dialog-selector">
            <div class="qq-dialog-message-selector"></div>
            <div class="qq-dialog-buttons">
                <button class="qq-cancel-button-selector">Close</button>
            </div>
        </dialog>

        <dialog class="qq-confirm-dialog-selector">
            <div class="qq-dialog-message-selector"></div>
            <div class="qq-dialog-buttons">
                <button class="qq-cancel-button-selector">No</button>
                <button class="qq-ok-button-selector">Yes</button>
            </div>
        </dialog>

        <dialog class="qq-prompt-dialog-selector">
            <div class="qq-dialog-message-selector"></div>
            <input type="text">
            <div class="qq-dialog-buttons">
                <button class="qq-cancel-button-selector">Cancel</button>
                <button class="qq-ok-button-selector">Ok</button>
            </div>
        </dialog>
    </div>
</script>
<!-- Fine Uploader DOM Element
   ====================================================================== -->
<div id="fine-uploader-validation"></div>
<input data-val="true" id="ImageIdList" name="ImageIdList" type="hidden" />
<!-- Your code to create an instance of Fine Uploader and bind to the DOM/template
====================================================================== -->
<script>
    $('#fine-uploader-validation').fineUploader({
        session: {
            endpoint: '/Picture/BelongProduct',
            params : {productId : @Model.Id}
        },
        template: 'qq-template-validation',
        request: {
            endpoint: '/Picture/AsyncUpload'
        },
        deleteFile: {
            enabled: true,
            endpoint: "/Picture/AsyncDelete"
        },
        validation: {
            allowedExtensions: ['jpeg', 'jpg', 'png', 'gif'],
            itemLimit: 5,
            sizeLimit: 512000 // 500 kB = 500 * 1024 bytes
        },
        callbacks: {
            onComplete: function (id, name, response) {
                if (response.success) {
                    var previewLink = qq(this.getItemByFileId(id)).getByClass('preview-link')[0];
                    previewLink.setAttribute("href", response.imageUrl);

                    this.setUuid(id, response.pictureId);
                    $("#ImageIdList").val($("#ImageIdList").val() + response.pictureId + ",");
                }
            },
            onDelete: function (id) {
                var uuid = this.getUuid(id);
                var list = $("#ImageIdList").val();
                $("#ImageIdList").val(list.replace(uuid + ",", ""));
            },
            onSessionRequestComplete: function (responseJSON, success) {
                if(success)
                {
                    var pids = "";
                    $.each(responseJSON, function (n, pic) {
                        pids=pids+pic.uuid+",";
                    });
                    $("#ImageIdList").val(pids);
                }
            }
        }
    });
</script>