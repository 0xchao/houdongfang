@model ShoppingCartModel
@using Nop.Core
@using Nop.Core.Infrastructure
@using Nop.Web.Models.ShoppingCart;
@{
    var webHelper = EngineContext.Current.Resolve<IWebHelper>();
}
<div class="shopping_state">
    <div class="shopping_state_tab">
        @Html.Partial("_OrderReviewData", Model.OrderReviewData)
        @if (Model.Items.Count > 0)
        {
            if (Model.Warnings.Count > 0)
            {
                <div class="message-error">
                    <ul>
                        @for (int i = 0; i < Model.Warnings.Count; i++)
                    {
                            <li>@Model.Warnings[i]</li>
                        }
                    </ul>
                </div>
            }
            @*we add enctype = "multipart/form-data" because "File upload" attribute control type requires it*@
        using (Html.BeginRouteForm("ShoppingCart", FormMethod.Post, new { enctype = "multipart/form-data" }))
        {
            <div class="shopping_state_th clear">
                @if (Model.IsEditable)
                {
                    <div class="shopping_state_th1">
                        移除<input type="checkbox" name="allcheckbox" />
                    </div>
                }
                @if (Model.ShowProductImages)
                {
                    <div class="shopping_state_th2"></div>
                }
                <div class="shopping_state_th3">@T("ShoppingCart.Product(s)")</div>
                <div class="shopping_state_th4">@T("ShoppingCart.UnitPrice")</div>
                <div class="shopping_state_th5">@T("ShoppingCart.Quantity")</div>
                <div class="shopping_state_th6">@T("ShoppingCart.ItemTotal")</div>
            </div>
            foreach (var item in Model.Items)
            {
                <div class="shopping_state_tr">
                    @if (Model.IsEditable)
                    {
                        <div class="shopping_state_th1">
                            <input type="checkbox" name="removefromcart" value="@(item.Id)" />
                        </div>
                    }
                    @if (Model.ShowProductImages)
                    {
                        <div class="shopping_state_th2">
                            <img alt="@item.Picture.AlternateText" src="@item.Picture.ImageUrl" title="@item.Picture.Title" />
                        </div>
                    }
                    <div class="shopping_state_th3">
                        <h2><a href="@Url.RouteUrl("Product", new { productId = item.ProductId })" class="product-name">@item.ProductName</a></h2>
                    </div>
                    <div class="shopping_state_th4">@item.UnitPrice</div>
                    <div class="shopping_state_th5">
                        <div class="shopping_state_th5_one">
                            @if (Model.IsEditable)
                            {

                                <div class="shopping_state_reduce">-</div>
                                <div class="shopping_state_num">
                                    <input name="itemquantity@(item.Id)" type="text" value="@(item.Quantity)" class="text_box" />
                                </div>
                                <div class="shopping_state_add">+</div>
                            }
                            else
                            {
                                <div class="shopping_state_num">@item.Quantity</div>
                            }
                        </div>
                    </div>
                    <div class="shopping_state_th6">@item.SubTotal</div>
                </div>
            }
            if (!String.IsNullOrEmpty(Model.CheckoutAttributeInfo))
            {
                <div class="selected-checkout-attributes">
                    @Html.Raw(Model.CheckoutAttributeInfo)
                </div>
            }
            if (Model.IsEditable)
            {
                @Html.Partial("_CheckoutAttributes", Model.CheckoutAttributes, new ViewDataDictionary())
            }
            <div class="shopping_state_price">
                @Html.Action("OrderTotals", "ShoppingCart", new { isEditable = Model.IsEditable })
            </div>
            if (Model.IsEditable)
            {
                <div class="shopping_state_sil">
                    <div class="shopping_state_return">
                        <input type="submit" name="updatecart" id="updatecart" value="@T("ShoppingCart.UpdateCart")" />
                        <input type="submit" name="continueshopping" id="continueshopping" value="@T("ShoppingCart.ContinueShopping")" />
                    </div>
                    <div class="shopping_state_settle">
                        @if (String.IsNullOrEmpty(Model.MinOrderSubtotalWarning))
                        {
                            <script type="text/javascript">
                                $(document).ready(function () {
                                    $('#checkout').click(function () {
                                        //terms of service
                                        var termOfServiceOk = true;
                                        if ($('#termsofservice').length > 0) {
                                            //terms of service element exists
                                            if (!$('#termsofservice').is(':checked')) {
                                                $("#terms-of-service-warning-box").dialog();
                                                termOfServiceOk = false;
                                            } else {
                                                termOfServiceOk = true;
                                            }
                                        }
                                        return termOfServiceOk;
                                    });
                                });
                            </script>
                            <button type="submit" id="checkout" name="checkout" value="checkout" class="button-1 checkout-button">
                                @T("Checkout.Button")
                            </button>
                        }
                    </div>
                </div>
                }

            }
        }
        else
        {
            @T("ShoppingCart.CartIsEmpty")
        }
    </div>
</div>